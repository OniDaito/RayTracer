include(CMakeParseArguments)

if(NOT DEFINED VERSION_MAJOR)
    set(VERSION_MAJOR 1)
endif(NOT DEFINED VERSION_MAJOR)
if(NOT DEFINED VERSION_MINOR)
    set(VERSION_MINOR 0)
endif(NOT DEFINED VERSION_MINOR)
if(NOT DEFINED VERSION_PATCH)
    set(VERSION_PATCH 0)
endif(NOT DEFINED VERSION_PATCH)
if(NOT DEFINED VERSION_RELEASE)
    set(VERSION_RELEASE 0)
endif(NOT DEFINED VERSION_RELEASE)

macro(set_version)
    cmake_parse_arguments(PACKAGE_VERSION "" "MAJOR;MINOR;PATCH;RELEASE;" "" ${ARGN})
    set(RAYS_PACKAGE_VERSION_MAJOR ${PACKAGE_VERSION_MAJOR})
    set(RAYS_PACKAGE_VERSION_MINOR ${PACKAGE_VERSION_MINOR})
    set(RAYS_PACKAGE_VERSION_PATCH ${PACKAGE_VERSION_PATCH})
    set(RAYS_RPM_PACKAGE_RELEASE   ${PACKAGE_VERSION_RELEASE})

    set(RAYS_PACKAGE_VERSION ${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}.${PACKAGE_VERSION_PATCH}-${PACKAGE_VERSION_RELEASE})
endmacro()

